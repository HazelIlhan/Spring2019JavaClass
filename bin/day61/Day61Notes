Polymprphism
Ability of object to  make multiple form 
Ability of object to be referred by its super type and take object specific action at run time 

Animal a =new Dog();
a.makeNoise();
a=new Cat();
a.makeNoise();
Animal makeNoise-->Dog --->woof,Cat miow

List <String> lst=new ArrayList<>();

it provides flexibility 
We can group objects together by its geeral type 

Animal[] animals={new Dog(),new Cat(), new Horse()}

Method parameters :
for example:
public static void AnimalNoiseTester(Animal anyAnimal){

// what argument we can pass toabove method 
AnimalNoiseTester(new Dog() );
AnimalNoiseTester(new Cat() );


Return Type
public static Animal getMyAnimal(){

rtuen--> any animali return edebiliyorsun 
return new Dog() or new Cat() or new Horse()
}

each class in java implicitly extend Object if not already extending another class interface does not have this concept.

WebDriver driver= new ChromeDriver(); ///reference type is WebBriver, obj is CromeDriver

// What decide what member can be accessible using the reference variable 


Whoever holds the leash decides where to go. Reference type holds the leash and it will lead the journey
---ONLY REFERENCE TYPE

Animal a=new Dog();

a can access only the members that visible to the animal 
a.makeNoise()---> woof
/// what if we really want to access anything that only exists in sub class
Dog d =(Dog) a;

d.dogstufff();

